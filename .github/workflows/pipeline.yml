name: taller pipeline DevOps CI/CD
#Configurar Disparador (on:)

on:
  #tipo push cuando hagamos un push directo a una rama
  push:
    #POnemos las ramas ejemplos [rama1,rama2,rama3,etc..]
    branches: [main]
  
  #tipo 2 pull request, establezco que mi pipeline solo se ejecutre cuando haya un pull en main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

#COnfiguraciones de (Jobs:)
jobs:
  builds-reduncy:
    #Sobre donde se va a ejecutar el job
    runs-on: ubuntu-20.04
    steps:
      - name: cancelar penultimo build
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{github.token}}

  sonar-test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Scanneo del proyecto con SonarCloud 
      #uses: sonarsource/sonarcloud-github-action@master
      run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=faigodev -Dsonar.organization=Faig -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{github.token}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}


  execution-test:
    needs: [sonar-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Descargar ultimo cambio de rama
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      #- name: Visualizar los cambios
      #  run: ls -l
      - name: Instalacion y Configuracion de jdk11
      # sacando java desde el marketplace de github/actions
        uses: actions/setup-java@v3
          #Parametros para la instalacion
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
          server-id: github
          #Dando conexto de en donde va a trabajar Java
          settings-path: ${{github.workspaces}}
          # Estableciendo parametro cache
          cache: "maven"
      #Vamos a ejecutar el test de la aplicacion
      - name: Ejecucion de Test
        run: mvn -B test --f pom.xml

  generation-builds: 
    needs: [execution-test]
    runs-on: ubuntu-20.04
    if: ${{github.event_name == 'push'}}
    steps:
      - name: Descargar ultimo cambio de rama
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      #- name: Visualizar los cambios
      #  run: ls -l
      - name: Instalacion y Configuracion de jdk11
      # sacando java desde el marketplace de github/actions
        uses: actions/setup-java@v3
          #Parametros para la instalacion
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
          server-id: github
          #Dando conexto de en donde va a trabajar Java
          settings-path: ${{github.workspaces}}
          # Estableciendo parametro cache
          cache: "maven"
      # Generando Artefacto
      - name: Generar artefacto
        run: mvn -B package -DskipTests --f pom.xml

  deploy-heroku:
      needs: [generation-builds]
      runs-on: ubuntu-20.04
      if: ${{github.event_name == 'push'}}
      steps: 
      - name: Descargar ultimo cambio de rama
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: deploy Heroku-App
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "app-usuarios-faig" #Must be unique in Heroku
          heroku_email: "flavio.illanes@vallegrande.edu.pe"